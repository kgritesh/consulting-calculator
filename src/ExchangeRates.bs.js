// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";

function getRatesFromCache(src) {
  var result = localStorage.getItem(src);
  if (!(result == null)) {
    return JSON.parse(result);
  }
  
}

function saveRatesCache(src, rates) {
  var rateStr = JSON.stringify(rates);
  localStorage.setItem(src, rateStr);
  
}

function $$fetch(src, callback) {
  var rateResponse = getRatesFromCache(src);
  if (rateResponse !== undefined) {
    return Curry._2(callback, rateResponse.rates, undefined);
  }
  var request = new XMLHttpRequest();
  request.addEventListener("load", (function (param) {
          var response = JSON.parse(request.response);
          return Curry._2(callback, response.rates, undefined);
        }));
  request.addEventListener("error", (function (error) {
          return Curry._2(callback, {}, Caml_option.some(error));
        }));
  request.open("GET", "https://api.exchangeratesapi.io/latest?base=" + src);
  request.send();
  
}

export {
  getRatesFromCache ,
  saveRatesCache ,
  $$fetch ,
  
}
/* No side effect */
